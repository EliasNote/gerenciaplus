import type { Metadata } from "next";
import { Roboto } from "next/font/google";
import "./globals.css";
import { UserProvider } from "@/context/UserContext";
import { createClient } from "@/lib/supabase-server";
import { buscarProfilePorId } from "@/services/profile.service";

const roboto = Roboto({
	variable: "--font-roboto",
	subsets: ["latin"],
	weight: ["400", "500", "700"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const supabase = await createClient();
	const {
		data: { user },
	} = await supabase.auth.getUser();
	const { data: sessionData } = await supabase.auth.getSession();
	const token = sessionData.session?.access_token;

	let profile = undefined;
	if (user?.id && token) {
		try {
			profile = await buscarProfilePorId(user.id, token);
		} catch {
			profile = undefined;
		}
	}

	return (
		<html lang="ptbr" suppressHydrationWarning>
			<body
				suppressHydrationWarning
				className={`${roboto.variable} antialiased bg-background text-foreground`}
			>
				<UserProvider initialProfile={profile}>{children}</UserProvider>
			</body>
		</html>
	);
}
